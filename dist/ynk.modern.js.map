{"version":3,"file":"ynk.modern.js","sources":["../assert.js","../async/sleep.js","../async/reduce.js","../async/series.js","../async/dowhile.js","../async/filter.js","../async/loop.js","../async/map.js","../async/dispatch.js","../async/timeout.js","../cleanstack.js","../curry.js","../events.js","../get.js","../increasingid.js","../touch.js","../set.js","../store.js","../timeout.js","../times.js","../unset.js","../dispatch.js"],"sourcesContent":["//truthy\nexport default function assert(test,message,fn){\n  if(test) return test\n  if(Error.captureStackTrace == null) throw new Error(message)\n\n  const err = new Error(message)\n  Error.captureStackTrace(err,fn || assert)\n  throw err\n}\n//not undefined\nexport const exists = (test,message,fn) => {\n  assert(test != null,message,fn || exists)\n  return test\n}\n","export default (delay=0)=> new Promise(res=>setTimeout(res,delay))\n","export default async (list=[],promise,first) => {\n  list = Object.values(list)\n  let result = first\n  let i = 0\n  for(let next of list){\n    result = await promise(result,next,i,list)\n    ++i\n  }\n  return result\n}\n","export default (promise,parallel=1) => {\n  const buffer = []\n  let processing = 0\n\n  function write(...args){\n    if(processing < parallel){\n      run(args)\n    }else{\n      buffer.push(args)\n    }\n  }\n\n  function dequeue(){\n    if(buffer.length){\n      run(buffer.shift())\n    }\n  }\n\n  function run(args){\n    ++processing\n    return promise(...args).finally(x=>{\n      --processing\n      dequeue()\n    })\n  }\n\n  return write\n}\n\n","import sleep from './sleep'\n\nexport default async function doWhile (promise, delay, ...args){\n  let ok = true\n  do{\n    ok = await promise(...args)  \n    if(ok) await sleep(delay)\n  }while(ok)\n}\n\n","import reduce from './reduce'\n\nexport default (list,promise)=>{\n  return reduce(list,async (result,...args)=>{\n    if(await promise(...args)){\n      result.push(args[0])\n    }\n    return result\n  },[])\n}\n","import sleep from './sleep'\n\nasync function loop(fn,delay,...args){\n  do{\n    await fn(...args)\n    await sleep(delay)\n  }while(true)\n}\n\nexport default loop\n","import reduce from './reduce'\n\nexport default (list,promise)=>{\n  return reduce(list,async (result,...args)=>{\n    result.push(await promise(...args))\n    return result\n  },[])\n}\n","import Series from './series'\nconst Dispatch = store => (reducer=async x=>x) =>{\n  async function dispatch(...args){\n    return store.set(await reducer(store.get(),...args))\n  }\n  return Series(dispatch)\n}\n\nexport default Dispatch\n\n","import sleep from './sleep'\n\nexport default async (fn,delay,msg='Request Timed Out')=>{\n  return Promise.race([\n    fn,\n    ()=>sleep(delay).then(x=>{throw new Error(msg)})\n  ])\n}\n","const ignoreDefaults = [\n  /node_modules/,\n  /\\internal\\/process/,\n]\n\nconst CleanStack = (ignore=ignoreDefaults) => (stack='',start=0,end)=>{\n  return stack\n    .split('\\n')\n    .slice(start, end)\n    .filter(line => {\n      return ignore.reduce((result, regex) => {\n        return result && !regex.test(line)\n      }, true)\n    })\n    .join('\\n')\n}\nexport default CleanStack\n","function curry(fn,depth=0,args=[]){\n  if(depth==0) return fn(...args)\n  return (...rest)=>curry(fn,depth-1,[...args,...rest])\n}\n\nexport default (fn,depth)=>(...args)=>curry(fn,depth,args)\n","import assert from './assert'\n\nexport default ()=>{\n  const listeners = new Set()\n  function off(cb){\n    listeners.delete(cb)\n  }\n  function on(cb){\n    assert(cb,'requires callback')\n    listeners.add(cb)\n    return ()=>off(cb)\n  }\n  function emit(...args){\n    listeners.forEach(cb=>setTimeout(cb,0,...args))\n  }\n  return {\n    on,\n    off,\n    emit,\n    listeners,\n  }\n}\n","const get = require('lodash/get')\n\nexport default get\n","const IncreasingId = (pad=16,nonce=0,max=0) => ()=>{\n  let id = nonce.toString().padStart(pad,'0')\n  ++nonce\n  if(max) nonce = nonce % max\n  return id\n}\n\nexport default IncreasingId\n\n\n","//this creates new objects along the path\n//and allows you to do what you want at final key\nfunction touch(state={},path=[],cb=x=>x,i=0){\n  if(path.length == 0) return data\n  if(i == path.length-1){ \n    cb(state,path[i])\n    return state\n  }\n  const head = path[i]\n  state[head] = {...state[head]}\n  touch(state[head],path,cb,i+1)\n  return state\n}                        \nexport default touch\n\n\n","import touch from './touch'\n\nexport default (state,path,data) => {\n  return touch(state,path,(obj,key)=>obj[key]=data)\n}\n\n","import assert from './assert'\nimport isArray from 'lodash/isArray'\nimport isFunction from 'lodash/isFunction'\nimport isString from 'lodash/isString'\nimport get from './get'\n\nexport default (state={})=>{\n\n  const listeners = new Map()\n\n  function set(next){\n    //swap state to be next before running callbacks\n    //because they may try to get state when executing\n    const prev = state\n    state = next\n    for (let [cb, isEqual] of listeners.entries()){\n      if(!isEqual(prev,next)) cb(next)\n    }\n  }\n\n  const wrapPathArray = (paths=[]) => (prev,next)=>{\n    //if an empty array is passed trigger every state update\n    if(paths.length == 0) return prev == next\n    return  paths.every(path=>{\n      // console.log(path,get(next,path),get(prev,path),get(prev,path) == get(next,path))\n      return get(prev,path) == get(next,path)\n    })\n  }\n\n  const wrapPathString = (path) => (prev,next)=>{\n    //if empty string passed trigger every update\n    if(path.length == 0) return prev == next\n    // console.log(get(next,path),get(prev,path) == get(next,path))\n    return get(prev,path) == get(next,path)\n  }\n\n  function on(cb,isEqual=[]){\n    assert(isFunction(cb),'requires callback function',on)\n\n    if(isString(isEqual)){\n      listeners.set(cb,wrapPathString(isEqual))\n    }\n    else if(isArray(isEqual)){\n      listeners.set(cb,wrapPathArray(isEqual))\n    }\n    else if(isFunction(isEqual)){\n      listeners.set(cb,isEqual)\n    }else{\n      throw new Error('isEqual must be string, array of strings, array of arrays, or a function')\n    }\n\n    return ()=>off(cb)\n  }\n\n  function off(cb){\n    return listeners.delete(cb)\n  }\n\n  function getState(path,def){\n    if(path == null) return state\n    if(path.length == 0) return state\n    return get(state,path,def)\n  }\n\n  return {\n    on,\n    off,\n    get:getState,\n    set,\n  }\n}\n\n\n","export default (fn,duration,...args) => {\n  const stop = setTimeout(fn,duration,...args)\n  return ()=>clearTimeout(stop)\n}\n","export default (length,cb)=>{\n return Array.from({length},(_,i)=> cb(i))\n}\n","function unset(state={},path=[],cb=x=>x,i=0){\n  if(path.length == 0) return data\n  if(i == path.length-1){ \n    cb(state,path[i])\n    return state\n  }\n  const head = path[i]\n  if(state[head] == null){\n    return state\n  }else{\n    state[head] = {...state[head]}\n  }\n  unset(state[head],path,cb,i+1)\n  return state\n}                        \n\nexport default (state,path,data) => {\n  return unset(state,path,(obj,key)=>delete obj[key])\n}\n\n","const Dispatch = store => (reducer=x=>x) => (...args)=>{\n  return store.set(reducer(store.get(),...args))\n}\n\nexport default Dispatch\n"],"names":["assert","test","message","fn","Error","captureStackTrace","err","exists","delay","Promise","res","setTimeout","list","promise","first","Object","values","result","i","next","parallel","buffer","processing","args","run","finally","x","length","shift","push","ok","sleep","reduce","async","store","reducer","Series","set","get","msg","race","then","ignoreDefaults","CleanStack","ignore","stack","start","end","split","slice","filter","line","regex","join","depth","curry","rest","listeners","Set","off","cb","delete","on","add","emit","forEach","require","IncreasingId","pad","nonce","max","id","toString","padStart","touch","state","path","data","head","obj","key","Map","isEqual","isFunction","isString","prev","isArray","paths","every","wrapPathArray","def","entries","duration","stop","clearTimeout","Array","from","_","unset","Dispatch"],"mappings":"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"}